p = 70096041376670345814650066810649443298076958716890609889742193479691976628377
q = 114568112559186829294469558733285248549723814802053499131450465620148557952227
e = 65537
c = 3699060850811147575409823818403856362753669202215800385570190102956254287078248629529782397974387689997802719060983513513367349313448928415502009307182543

from Crypto.Util.number import long_to_bytes, inverse
from sympy import N

n = p*q
tot = (p-1)*(q-1)
d = inverse(e, tot)
print(long_to_bytes(pow(c,d,n))) # LKSSMK{The_First_Step_Into_RSA}